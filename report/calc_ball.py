"""
Система оценки производительности LLM-моделей.

Рассчитывает итоговый балл (0–100) на основе:
- Процента правильных ответов (набор баллов)
- Времени выполнения теста (снятие баллов)

Рассчитываем процент правильных ответов - исходные баллы.
Отнимаем от исходных баллов в процентном отношении разницу
между минимальным и медианным временем выполнения тестов.

Пример:
10 вопросов, 8 правильных, 80 баллов имеем.
Ограничения времени 0.5 - 1 сек.
Медианное время выполнения тестов 0.8 сек.
Тогда:
80 баллов - это 100%
1 (макс) - 0.5 (мин) = 0.5 это 100% потери баллов от имеющихся при времени 1
0.8 - 0.5 (мин) = 0.3  # Превышение минимального времени
0.3 / 0.5 (потери) * 100 = 60  # это 60% потери баллов
80 / 100 * (100 - 60) = 32 балла получает модель.
"""

def calculate_model_score(
    test_count: int,
    right_count: int,
    median_time: float,
    t_min: float = 0.5,
    t_max: float = 2.0,
) -> int:
    """
    Рассчитывает итоговый балл модели на основе правильности и скорости.

    :param test_count: Общее количество вопросов в тесте.
    :param right_count: Количество правильно выполненных вопросов.
    :param t_min: Идеальное время ответа (сек).
    :param t_max: Максимально допустимое время (сек).

    :return: Итоговый балл (0–100)
    """
    # Рассчитываем процент правильных ответов
    accuracy = right_count / test_count * 100

    # Рассчитываем процент потерь времени
    time_loss = (median_time - t_min) / (t_max - t_min) * 100

    # Итоговый балл
    score = int(accuracy / 100 * (100 - time_loss))

    # Ограничиваем баллы от 0 до 100
    score = max(0, min(100, score))
    return score